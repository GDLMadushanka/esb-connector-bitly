<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="bitly"
       transports="https,http"
       startOnLoad="true"
       trace="disable">
    <description/>
    <target>
        <inSequence>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="fullName" expression="json-eval($.fullName)"/>
            <property name="crtBundleTitle" expression="json-eval($.crtBundleTitle)"/>
            <property name="bitlyUser" expression="json-eval($.bitlyUser)"/>
            <property name="proDomain" expression="json-eval($.proDomain)"/>
            <property name="expandUser" expression="json-eval($.expandUser)"/>
            <property name="bndlDescription" expression="json-eval($.bndlDescription)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="isExpandClientId" expression="json-eval($.isExpandClientId)"/>
            <property name="NoOfLinks" expression="json-eval($.NoOfLinks)"/>
            <property name="bitlyLink" expression="json-eval($.bitlyLink)"/>
            <property name="bitlyLinkforContent" expression="json-eval(bitlyLinkforContent)"/>
            <property name="contentType" expression="json-eval($.contentType)"/>
            <property name="bitlyLinkforCategory" expression="json-eval(bitlyLinkforCategory)"/>
            <property name="query" expression="json-eval($.query)"/>
            <property name="noOfLinks" expression="json-eval($.noOfLinks)"/>
            <property name="urlforLinkCkick" expression="json-eval($.urlforLinkCkick)"/>
            <property name="urlforLinkCountry" expression="json-eval($.urlforLinkCountry)"/>
            <property name="urlforLinkShares" expression="json-eval($.urlforLinkShares)"/>
            <property name="urlforReferringDomain" expression="json-eval($.urlforReferringDomain)"/>
            <property name="shortUrlforInfo" expression="json-eval($.shortUrlforInfo)"/>
            <property name="shortUrlforExpand" expression="json-eval($.shortUrlforExpand)"/>
            <property name="longtUrlforLinkSave" expression="json-eval($.longtUrlforLinkSave)"/>
            <property name="urlforLookup" expression="json-eval($.urlforLookup)"/>
            <property name="longtUrlforShorten" expression="json-eval($.longtUrlforShorten)"/>
            <property name="expandUserinfo" expression="json-eval($.expandUserinfo)"/>
            <property name="titleforLink" expression="json-eval($.titleforLink)"/>
            <property name="noteforLink" expression="json-eval($.noteforLink)"/>
            <property name="privateLink" expression="json-eval($.privateLink)"/>
            <property name="bitlyShortDomain" expression="json-eval($.bitlyShortDomain)"/>
            <property name="clientId" expression="json-eval($.clientId)"/>
            <bitly.init>
                <accessToken>{$ctx:accessToken}</accessToken>
            </bitly.init>
            <switch source="get-property('transport', 'Action')">
                <!--user-->
                <case regex="urn:getOauthApp">
                    <bitly.getOauthApp>
                        <clientId>{$ctx:clientId}</clientId>
                    </bitly.getOauthApp>
                </case>
                <case regex="urn:getTrackingDomainList">
                    <bitly.getTrackingDomainList>

                    </bitly.getTrackingDomainList>
                </case>
                <case regex="urn:getUserInfo">
                    <bitly.getUserInfo>
                        <fullName>{$ctx:fullName}</fullName>
                    </bitly.getUserInfo>
                </case>
                <case regex="urn:getUserLinkHistory">
                    <bitly.getUserLinkHistory>
                        <linkForGetHistory>{$ctx:linkForGetHistory}</linkForGetHistory>
                        <limitForGetLink>{$ctx:limitForGetLink}</limitForGetLink>
                        <isPrivateLinks>{$ctx:isPrivateLinks}</isPrivateLinks>
                        <userForGetHistory>{$ctx:userForGetHistory}</userForGetHistory>
                        <queryForGetHistory>{$ctx:queryForGetHistory}</queryForGetHistory>
                    </bitly.getUserLinkHistory>
                </case>
                <case regex="urn:getUserNetworkHistory">
                    <bitly.getUserNetworkHistory>
                        <isExpandClientId>{$ctx:isExpandClientId}</isExpandClientId>
                        <limitForGetNW>{$ctx:limit}</limitForGetNW>
                        <isExpandUser>{$ctx:expandUser}</isExpandUser>
                    </bitly.getUserNetworkHistory>
                </case>
                <!--user metrics-->
                <case regex="urn:getUserClicks">
                    <bitly.getUserClicks>
                    </bitly.getUserClicks>
                </case>
                <case regex="urn:getCountries">
                    <bitly.getCountries>
                    </bitly.getCountries>
                </case>
                <case regex="urn:getShareCounts">
                    <bitly.getShareCounts>
                    </bitly.getShareCounts>
                </case>
                <case regex="urn:getReferrers">
                    <bitly.getReferrers>
                        <limitForGetReferrers>{$ctx:limit}</limitForGetReferrers>
                    </bitly.getReferrers>
                </case>
                <case regex="urn:getReferringDomains">
                    <bitly.getReferringDomains>
                        <limitForGetRefDomain>{$ctx:limit}</limitForGetRefDomain>
                    </bitly.getReferringDomains>
                </case>
                <case regex="urn:getPopularLinks">
                    <bitly.getPopularLinks>
                        <limitForGetPopular>{$ctx:limit}</limitForGetPopular>
                    </bitly.getPopularLinks>
                </case>
                <!--data-->
                <case regex="urn:getHighvalue">
                    <bitly.getHighvalue>
                        <NoOfLinks>{$ctx:NoOfLinks}</NoOfLinks>
                    </bitly.getHighvalue>
                </case>
                <case regex="urn:getLinkCatagory">
                    <bitly.getLinkCatagory>
                        <bitlyLinkforCategory>{$ctx:bitlyLinkforCategory}</bitlyLinkforCategory>
                    </bitly.getLinkCatagory>
                </case>
                <case regex="urn:getLinkContent">
                    <bitly.getLinkContent>
                        <bitlyLinkforContent>{$ctx:bitlyLinkforContent}</bitlyLinkforContent>
                        <contentType>{$ctx:contentType}</contentType>
                    </bitly.getLinkContent>
                </case>
                <case regex="urn:getLinkInfo">
                    <bitly.getLinkInfo>
                        <bitlyLink>{$ctx:bitlyLink}</bitlyLink>
                    </bitly.getLinkInfo>
                </case>
                <case regex="urn:getSearch">
                    <bitly.getSearch>
                        <query>{$ctx:query}</query>
                        <noOfLinks>{$ctx:noOfLinks}</noOfLinks>
                        <offSet>{$ctx:offSet}</offSet>
                        <returnLangISOCodeTwo>{$ctx:returnLangISOCodeTwo}</returnLangISOCodeTwo>
                    </bitly.getSearch>
                </case>
                <case regex="urn:getExpand">
                    <bitly.getExpand>
                        <shortUrlforExpand>{$ctx:shortUrlforExpand}</shortUrlforExpand>
                    </bitly.getExpand>
                </case>
                <case regex="urn:getInfo">
                    <bitly.getInfo>
                        <shortUrlforInfo>{$ctx:shortUrlforInfo}</shortUrlforInfo>
                        <expandUserinfo>{$ctx:expandUserinfo}</expandUserinfo>
                    </bitly.getInfo>
                </case>
                <case regex="urn:getLookup">
                    <bitly.getLookup>
                        <urlforLookup>{$ctx:urlforLookup}</urlforLookup>
                    </bitly.getLookup>
                </case>
                <case regex="urn:getShorten">
                    <bitly.getShorten>
                        <longtUrlforShorten>{$ctx:longtUrlforShorten}</longtUrlforShorten>
                        <bitlyShortDomain>{$ctx:bitlyShortDomain}</bitlyShortDomain>
                    </bitly.getShorten>
                </case>
                <case regex="urn:getLinkSave">
                    <bitly.getLinkSave>
                        <longtUrlforLinkSave>{$ctx:longtUrlforLinkSave}</longtUrlforLinkSave>
                        <titleforLink>{$ctx:titleforLink}</titleforLink>
                        <noteforLink>{$ctx:noteforLink}</noteforLink>
                        <privateLink>{$ctx:privateLink}</privateLink>
                    </bitly.getLinkSave>
                </case>
                <!--links metrics-->
                <case regex="urn:getLinkClicks">
                    <bitly.getLinkClicks>
                        <urlforLinkCkick>{$ctx:urlforLinkCkick}</urlforLinkCkick>
                    </bitly.getLinkClicks>
                </case>
                <case regex="urn:getLinkCountries">
                    <bitly.getLinkCountries>
                        <urlforLinkCountry>{$ctx:urlforLinkCountry}</urlforLinkCountry>
                    </bitly.getLinkCountries>
                </case>
                <case regex="urn:getLinkShares">
                    <bitly.getLinkShares>
                        <urlforLinkShares>{$ctx:urlforLinkShares}</urlforLinkShares>
                    </bitly.getLinkShares>
                </case>
                <case regex="urn:getLinkReferringDomains">
                    <bitly.getLinkReferringDomains>
                        <urlforReferringDomain>{$ctx:urlforReferringDomain}</urlforReferringDomain>
                    </bitly.getLinkReferringDomains>
                </case>
                <!--domain-->
                <case regex="urn:getProDomain">
                    <bitly.getProDomain>
                        <domain>{$ctx:proDomain}</domain>
                    </bitly.getProDomain>
                </case>
                <case regex="urn:getTrackingDomainClicks">
                    <bitly.getTrackingDomainClicks>
                        <trackingDomain>{$ctx:proDomain}</trackingDomain>
                    </bitly.getTrackingDomainClicks>
                </case>
                <case regex="urn:getTrackingDomainShortenCounts">
                    <bitly.getTrackingDomainShortenCounts>
                        <trackingDomainforCount>{$ctx:proDomain}</trackingDomainforCount>
                    </bitly.getTrackingDomainShortenCounts>
                </case>
            </switch>
            <filter source="$axis2:HTTP_SC" regex="^[^2][0-9][0-9]">
                <then>
                    <property name="ERROR_CODE" expression="$axis2:HTTP_SC"/>
                    <switch source="$axis2:HTTP_SC">
                        <case regex="403">
                            <property name="ERROR_MESSAGE" value="RATE_LIMIT_EXCEEDED"/>
                        </case>
                        <case regex="500">
                            <property name="ERROR_MESSAGE" value="INVALID_URI"/>
                        </case>
                        <case regex="503">
                            <property name="ERROR_MESSAGE" value="Bad Request"/>
                            <property name="message" expression="json-eval($.message)"/>
                        </case>
                    </switch>
                </then>
            </filter>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>